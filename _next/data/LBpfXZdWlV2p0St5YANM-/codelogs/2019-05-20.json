{"pageProps":{"codelog":{"tags":["javascript"],"title":"2019-05-20","content":"<h2>Plan for the day</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> Copy resources link from codelogs to a separate page. Handy for the future.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Implementation of a calendar-style archive for codelogs<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> Figure out how to marry Jekyll and vanilla JS</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Populate the page with a full calendar using just JS</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Add hyperlinks for dates where codelogs exist</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Style everything nicely in CSS, maybe with a dropdown selection for months</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Add buttons for prev / next / show all simplified list, etc.</li>\n</ul></li>\n</ul>\n<h2>Learned today</h2>\n<p>Jekyll's Liquid format is a weird monstrosity when coupled with pure JS. Technically this works:</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">let</span> posts = [];\n{% <span class=\"hljs-keyword\">for</span> log <span class=\"hljs-keyword\">in</span> site.posts %}\n  day = {{ log.date | date: <span class=\"hljs-string\">'%d'</span> }}\n  month = {{log.date | date: <span class=\"hljs-string\">'%m'</span>}}\n  year = {{log.date | date: <span class=\"hljs-string\">'%Y'</span>}}\n  posts.push({day, month, year});\n{% endfor %}</code></pre>\n<p>I hope extracting post dates can be done in a less cringy way :|</p>\n<h2>Resources list</h2>\n<h2>Other resources</h2>\n"}},"__N_SSG":true}