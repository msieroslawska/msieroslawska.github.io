{"pageProps":{"codelog":{"tags":["ajax","api","javascript","html","promise"],"title":"2019-04-22","content":"<h2>Plan for the day</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> Continue watching <a href=\"https://frontendmasters.com/courses/web-development-v2/\">Complete Intro to Web Development, v2</a>.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> Implement a fetcher for random doggo pics.<ul>\n<li>Implemented <a href=\"../../projects/web-dev/03-dog-ceo/index.html\">here</a></li>\n</ul></li>\n</ul>\n<h2>Learned today</h2>\n<ul>\n<li>\n<p><strong>AJAX</strong>: used when a website requests more information from a server after the page is loaded.</p>\n</li>\n<li>\n<p><code>fetch()</code>: a built-in browser tool, returns a promise.</p>\n</li>\n<li>\n<p><strong>API</strong>: stands for <em>Application Programming Interface</em>. If you want to know what a public API returns, you should read the documentation, like <a href=\"https://dog.ceo/dog-api/documentation/random\">this one</a>.</p>\n<p>This is a sample rensponse from dog.ceo random API:</p>\n<pre><code class=\"hljs language-javascript\">{\n  <span class=\"hljs-string\">\"status\"</span>: <span class=\"hljs-string\">\"success\"</span>,\n  <span class=\"hljs-string\">\"message\"</span>: <span class=\"hljs-string\">\"https://images.dog.ceo/breeds/affenpinscher/n02110627_11783.jpg\"</span>\n}</code></pre>\n<p>Combining all of the above, we can use the API to display random images like so:</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> DOG_URL = <span class=\"hljs-string\">\"https://dog.ceo/api/breeds/image/random\"</span>;\n\nfetch(DOG_URL).then(<span class=\"hljs-function\"><span class=\"hljs-params\">response</span> =></span> response.json()).then(<span class=\"hljs-function\"><span class=\"hljs-params\">parsedResponse</span> =></span> <span class=\"hljs-built_in\">console</span>.log(parsedResponse.message));</code></pre>\n</li>\n<li>\n<p><strong>Node</strong>: think about it as a JS on a server (outside the browser).</p>\n</li>\n<li>\n<p><code>npm</code>: a package manager for node. Uses <code>package.json</code> to specify packages and dependencies.</p>\n</li>\n<li>\n<p>importing modules</p>\n<ul>\n<li>\n<p><code>CommonJS</code></p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'./path/to/file'</span>);</code></pre>\n</li>\n<li>\n<p>ES6</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">import</span>(<span class=\"hljs-string\">'./path/to.file'</span>);</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>If you use <code>document.querySelector('.add-doggo').addEventListener('click', addNewDoggo)</code> from Brian's example, you need to move <code>&#x3C;script></code> to the end of <code>&#x3C;body></code>. Otherwise browser will complain that <code>document.querySelector('.add-doggo')</code> is <code>null</code> as the script will load before the page and its elements are created.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">head</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"width=device-width, initial-scale=1.0\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">http-equiv</span>=<span class=\"hljs-string\">\"X-UA-Compatible\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"ie=edge\"</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">title</span>></span>Doggos fetcher<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">title</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">head</span>></span>\n\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Doggos fetcher<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"doggos\"</span> /></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"add-doggo\"</span>></span>Add new doggo<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">button</span>></span>\n\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"./doggos.js\"</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">script</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span></code></pre>\n</li>\n<li>\n<p>I had an issue with unresolved promise when trying to create new image on the button click. My initial implementation looked like this:</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> addNewDoggo = <span class=\"hljs-function\">() =></span> {\n  <span class=\"hljs-keyword\">const</span> randomUrl = fetch(DOGGOS_URL)\n    .then(<span class=\"hljs-function\"><span class=\"hljs-params\">response</span> =></span> response.json())\n    .then(<span class=\"hljs-function\"><span class=\"hljs-params\">processedResponse</span> =></span> {\n      <span class=\"hljs-keyword\">const</span> url = processedResponse.message\n    });\n\n  <span class=\"hljs-keyword\">const</span> img = <span class=\"hljs-built_in\">document</span>.createElement(<span class=\"hljs-string\">'img'</span>);\n  img.src = randomUrl;\n  img.alt = <span class=\"hljs-string\">'Cute doggo'</span>;\n  doggos.appendChild(img);\n};</code></pre>\n<p>This did not work as <code>randomUrl</code> was a promise, not my desired URL. What did work though (and is way simpler) is shifting image creation to the body of the last <code>then</code>:</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> addNewDoggo = <span class=\"hljs-function\">() =></span> {\n  fetch(DOGGOS_URL)\n    .then(<span class=\"hljs-function\"><span class=\"hljs-params\">response</span> =></span> response.json())\n    .then(<span class=\"hljs-function\">(<span class=\"hljs-params\">processedResponse</span>) =></span> {\n      <span class=\"hljs-keyword\">const</span> url = processedResponse.message;\n\n      <span class=\"hljs-keyword\">const</span> img = <span class=\"hljs-built_in\">document</span>.createElement(<span class=\"hljs-string\">'img'</span>);\n      img.src = url;\n      img.alt = <span class=\"hljs-string\">'Cute doggo'</span>;\n      doggos.appendChild(img);\n    });\n};</code></pre>\n</li>\n</ul>\n<h2>Resources list</h2>\n<h2>Other resources</h2>\n<ul>\n<li><a href=\"https://github.com/toddmotto/public-apis\">A nice list of public APIs</a></li>\n</ul>\n"}},"__N_SSG":true}