{"pageProps":{"codelog":{"tags":["javascript"],"title":"2019-04-19","content":"<h2>Plan for the day</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> Finish the HTML + CSS project.<ul>\n<li>It's available here: <a href=\"../../projects/web-dev/01-The-news-times/index.html\">../../projects/web-dev/01-The-news-times/index.html</a></li>\n</ul></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> Continue watching <a href=\"https://frontendmasters.com/courses/web-development-v2/\">Complete Intro to Web Development, v2</a>.</li>\n</ul>\n<h2>Learned today</h2>\n<ul>\n<li>\n<p>I watched more of Brian's videos about JS fundamentals to make sure I am not missing anything. He mentioned there is a quite clever pattern to avoid <code>this</code> rabbit hole for objects. Instead of making <code>getName</code> a function inside the object:</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> me = {\n  <span class=\"hljs-attr\">name</span>: {\n    <span class=\"hljs-attr\">first</span>: <span class=\"hljs-string\">'Brian'</span>,\n    <span class=\"hljs-attr\">last</span>: <span class=\"hljs-string\">'Holt'</span>,\n  }\n  getName() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`My name is <span class=\"hljs-subst\">${<span class=\"hljs-built_in\">this</span>.name.first}</span> <span class=\"hljs-subst\">${<span class=\"hljs-built_in\">this</span>.name.last}</span>.`</span>\n  }\n}</code></pre>\n<p>why not just declare it as a separate function in global scope and pass the object?</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> me = {\n  <span class=\"hljs-attr\">name</span>: {\n    <span class=\"hljs-attr\">first</span>: <span class=\"hljs-string\">'Brian'</span>,\n    <span class=\"hljs-attr\">last</span>: <span class=\"hljs-string\">'Holt'</span>,\n  }\n}\n\ngetName(person) {\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`My name is <span class=\"hljs-subst\">${person.name.first}</span> <span class=\"hljs-subst\">${person.name.last}</span>.`</span>\n}</code></pre>\n</li>\n<li>\n<p>Finishing the first HTML / CSS project made me realize how hard <code>flex</code> can be. I need way more practice with this.</p>\n</li>\n<li>\n<p>If you want to add an element on the first place in an array, you use <code>Array.prototype.unshift()</code>. Not the easiest to remember, I know. But somehow somebody thought that removing the first element would be <code>Array.prototype.shift()</code> and tried to maintain the logic.</p>\n</li>\n</ul>\n<h2>Resources list</h2>\n<h2>Other resources</h2>\n"}},"__N_SSG":true}